{"ast":null,"code":"var _jsxFileName = \"/Users/edwardreyes/react-portfolio/src/components/Card/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card } from 'react-bootstrap'; // Components\n\nimport Modal from '../Modal';\nimport abstract from '../../assets/images/jumbotron-wallpaper.jpg';\nimport './style.css';\nexport default function ProjectCard({\n  data\n}) {\n  const [hover, setHover] = useState(false);\n  const [close, setClose] = useState(false);\n  useEffect(() => {\n    if (close) {\n      setClose(false);\n      setHover(false);\n    }\n  }, [close]);\n\n  const hoverTrue = () => {\n    setHover(true);\n  };\n\n  const hoverFalse = () => {\n    setHover(false);\n  };\n\n  const toggleClose = () => {\n    setHover(false);\n    setClose(true);\n  };\n\n  let cardStyle;\n\n  if (hover) {\n    cardStyle = {\n      opacity: 1,\n      background: 'rgba(0,0,0,0.8)',\n      transition: `${hover ? '0.5s' : '0.5s;'}`\n    };\n  } else {\n    cardStyle = {\n      opacity: 0,\n      background: 'rgba(0,0,0,0)',\n      transition: `${hover ? '0.5s' : '0.5s;'}`,\n      alignItems: 'center'\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, console.log(data), /*#__PURE__*/React.createElement(Card.Img, {\n    src: data.images[0],\n    alt: \"Card image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card.ImgOverlay, {\n    className: \"image-overlay\",\n    style: cardStyle,\n    onMouseEnter: hoverTrue,\n    onMouseLeave: hoverFalse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, data.name), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, data.description), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Last updated 3 mins ago\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: data.links.deployed,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Visit Site\"))));\n}","map":{"version":3,"sources":["/Users/edwardreyes/react-portfolio/src/components/Card/index.js"],"names":["React","useState","useEffect","Button","Card","Modal","abstract","ProjectCard","data","hover","setHover","close","setClose","hoverTrue","hoverFalse","toggleClose","cardStyle","opacity","background","transition","alignItems","console","log","images","name","description","links","deployed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,QAAP,MAAqB,6CAArB;AAEA,OAAO,aAAP;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAA+B;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,KAAJ,EAAW;AACTC,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GALQ,EAKN,CAACC,KAAD,CALM,CAAT;;AAOA,QAAME,SAAS,GAAG,MAAM;AACtBH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIA,QAAMI,UAAU,GAAG,MAAM;AACvBJ,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMK,WAAW,GAAG,MAAM;AACxBL,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAHD;;AAKA,MAAII,SAAJ;;AACA,MAAIP,KAAJ,EAAW;AACTO,IAAAA,SAAS,GAAG;AACVC,MAAAA,OAAO,EAAE,CADC;AAEVC,MAAAA,UAAU,EAAE,iBAFF;AAGVC,MAAAA,UAAU,EAAG,GAAEV,KAAK,GAAG,MAAH,GAAY,OAAQ;AAH9B,KAAZ;AAKD,GAND,MAMO;AACLO,IAAAA,SAAS,GAAG;AACVC,MAAAA,OAAO,EAAE,CADC;AAEVC,MAAAA,UAAU,EAAE,eAFF;AAGVC,MAAAA,UAAU,EAAG,GAAEV,KAAK,GAAG,MAAH,GAAY,OAAQ,EAH9B;AAIVW,MAAAA,UAAU,EAAE;AAJF,KAAZ;AAMD;;AAED,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACC,GAAR,CAAYd,IAAZ,CADH,eAGE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACe,MAAL,CAAY,CAAZ,CAAf;AAA+B,IAAA,GAAG,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,IAAD,CAAM,UAAN;AAAiB,IAAA,SAAS,EAAC,eAA3B;AACE,IAAA,KAAK,EAAEP,SADT;AAEE,IAAA,YAAY,EAAEH,SAFhB;AAE2B,IAAA,YAAY,EAAEC,UAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaN,IAAI,CAACgB,IAAlB,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYhB,IAAI,CAACiB,WAAjB,CAFF,eAGE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHF,eAKE;AAAG,IAAA,IAAI,EAAEjB,IAAI,CAACkB,KAAL,CAAWC,QAApB;AAA8B,IAAA,MAAM,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CAJF,CAJF,CADF;AAoCD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Card } from 'react-bootstrap';\n// Components\nimport Modal from '../Modal';\nimport abstract from '../../assets/images/jumbotron-wallpaper.jpg';\n\nimport './style.css';\n\nexport default function ProjectCard({ data }) {\n  const [hover, setHover] = useState(false);\n  const [close, setClose] = useState(false);\n  useEffect(() => {\n    if (close) {\n      setClose(false);\n      setHover(false);\n    }\n  }, [close])\n\n  const hoverTrue = () => {\n    setHover(true);\n  }\n\n  const hoverFalse = () => {\n    setHover(false);\n  }\n\n  const toggleClose = () => {\n    setHover(false)\n    setClose(true);\n  }\n\n  let cardStyle;\n  if (hover) {\n    cardStyle = {\n      opacity: 1,\n      background: 'rgba(0,0,0,0.8)',\n      transition: `${hover ? '0.5s' : '0.5s;'}`\n    }\n  } else {\n    cardStyle = {\n      opacity: 0,\n      background: 'rgba(0,0,0,0)',\n      transition: `${hover ? '0.5s' : '0.5s;'}`,\n      alignItems: 'center',\n    }\n  }\n\n  return (\n    <Card className=\"text-white\">\n      {console.log(data)}\n      {/* {console.log(data.images)} */}\n      <Card.Img src={data.images[0]} alt=\"Card image\" />\n      <Card.ImgOverlay className='image-overlay'\n        style={cardStyle}\n        onMouseEnter={hoverTrue} onMouseLeave={hoverFalse}\n      >\n        <Card.Body>\n          <Card.Title>{data.name}</Card.Title>\n          <Card.Text>{data.description}</Card.Text>\n          <Card.Text>Last updated 3 mins ago</Card.Text>\n          {/* <Modal hoverState={toggleClose} /> */}\n          <a href={data.links.deployed} target='_blank'>Visit Site</a>\n        </Card.Body>\n        {/* {hover ? (<>\n          <Card.Title>Card title</Card.Title>\n          <Card.Text>\n            This is a wider card with supporting text below as a natural lead-in to\n            additional content. This content is a little bit longer.\n          </Card.Text>\n          <Card.Text>Last updated 3 mins ago</Card.Text>\n          <Modal />\n        </>) : (\n          <Card.Title \n            style={{fontSize: '30px', background: 'rgba(0,0,0,0.7)', width: '100%'}}\n            className='text-center p-3'\n          >\n            Project Title\n          </Card.Title>\n        )} */}\n\n      </Card.ImgOverlay>\n    </Card>\n  );\n}"]},"metadata":{},"sourceType":"module"}