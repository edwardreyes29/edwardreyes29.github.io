[
  {
    "name": "Music eXchange",
    "description": "This a MERN Stack e-commerce music app that allows users to share sell their music.",
    "long_description": "User's can manage their profile page by updating their profile picture, descriptions about themselves, adding social media links, and list instruments a member has experience with. Users who purchase other music can listen to all their purchased music on the home page.",
    "contributions": [
      "Create HTML and API routes to visit user profiles, purchase songs, save favorite users, save songs, and create and save requests.",
      "Create Userâ€™s table that stores information for each user",
      "Create songs table and schema",
      "Create purchased songs array that stores the purchased songs",
      "Create table and schema for tutorials",
      "Create routes and controller functions to allow a user to edit their profile",
      "Creating search functionality to allow users to search for other users.",
      "Created the account page forms to update account information",
      "Used Cloudinary Node.js Package to upload audio and images and added functions to remove stored Cloudinary files dynamically.",
      "Used react-image-crop to allow users to crop their select profile picture, this was done to keep all profile styling consistent.",
      "Created the Songs page and media players to allow users to view their songs on their account, profile page, and home page.",
      "Responsible for the styling and placement of all media players.",
      "Created Jumbotron images and logos using Adobe XD."
    ],
    "technologies": [
      "HTML",
      "CSS",
      "Bootstrap",
      "Materialize-UI",
      "JavaScript",
      "Node.js",
      "Express.js",
      "MongoDB",
      "Mongoose.js",
      "React.js",
      "react-media-player",
      "react-image-crop",
      "PayPal API",
      "Cloudinary"
    ],
    "images": [
      "https://raw.githubusercontent.com/edwardreyes29/Muse-eXchange/master/client/src/assets/screenshots/home.png",
      "https://raw.githubusercontent.com/edwardreyes29/Muse-eXchange/master/client/src/assets/screenshots/explore.png",
      "https://raw.githubusercontent.com/edwardreyes29/Muse-eXchange/master/client/src/assets/screenshots/songs.png",
      "https://raw.githubusercontent.com/edwardreyes29/Muse-eXchange/master/client/src/assets/screenshots/profile-page.png",
      "https://raw.githubusercontent.com/edwardreyes29/Muse-eXchange/master/client/src/assets/screenshots/profile-2.png",
      "https://raw.githubusercontent.com/edwardreyes29/Muse-eXchange/master/client/src/assets/screenshots/profile-3.png",
      "https://raw.githubusercontent.com/edwardreyes29/Muse-eXchange/master/client/src/assets/screenshots/account.png",
      "https://raw.githubusercontent.com/edwardreyes29/Muse-eXchange/master/client/src/assets/screenshots/account-5.png",
      "https://raw.githubusercontent.com/edwardreyes29/Muse-eXchange/master/client/src/assets/screenshots/account-2.png",
      "https://raw.githubusercontent.com/edwardreyes29/Muse-eXchange/master/client/src/assets/screenshots/account-3.png",
      "https://raw.githubusercontent.com/edwardreyes29/Muse-eXchange/master/client/src/assets/screenshots/paypal.png",
      "https://raw.githubusercontent.com/edwardreyes29/Muse-eXchange/master/client/src/assets/screenshots/team.png"

    ],
    "links": {
      "deployed": "https://musicexchangev2.herokuapp.com/",
      "github": "https://github.com/edwardreyes29/Muse-eXchange"
    }
  },
  {
    "name": "Secure Travel App",
    "description": "A travel app that advises where to travel based on Coronavirus risk recommendations",
    "long_description": "A travel app that advises the user where they should travel based on Coronavirus risk recommendations and provides the user with travel accommodation options. It shows Covid related data World-wide and in the U.S. User's can see total confirmed deaths, total confirmed cases, view cases on a D3.js generated map, and see risk levels of hotel locations.",
    "contributions": [
      "We used HTML, CSS, JavaScript and Bootstrap to build out the design layout.",
      "Added a carousel from Bootstrap to have running updates of Covid-19 news",
      "Added media queries to add some functionality when a user views the site on various sized devices.",
      "Added scroll buttons to country and U.S, state listings so the viewer can find their selected locations with ease.",
      "Styled the background color, added Search button and bar.",
      "Within the calls we appended the data to those columns",
      "Added click functions to switch back and forth between the USA and World maps to be able to toggle between the two which will display the results",
      "Added a click function (modal) that triggers the modal which displays hotel information to the user at their desired location.",
      "Appended the hotel info (name price etc.) within the modal for locations in the US and the World.",
      "Used API calls to write the total amount of cases by country",
      "Used API calls to highlight total death by country",
      "Used API calls Track US states confirmed cases",
      "Used API calls to illustrate US Death confirmed cases"
    ],
    "technologies": [
      "HTML",
      "CSS",
      "Bootstrap",
      "JavaScript",
      "D3.js",
      "jQuery",
      "COVID-19 Statistics API",
      "Coronavirus-us-api API",
      "TripAdvisor API",
      "COVID-19 News API"
    ],
    "apis": [
      {"title": "COVID-19 Statistics By Axisbits", "link": ""} 
    ],
    "images": [
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/project-1/world-cases.png",
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/project-1/us-cases.png",
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/project-1/news.png",
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/project-1/hotel-listings.png"
    ],
    "links": {
      "deployed": "https://edwardreyes29.github.io/project-1/",
      "github": "https://github.com/edwardreyes29/project-1"
    }
  },
  {
    "name": "Employee Directory Using React",
    "description": "This is an employee directory created using React.js.",
    "long_description": "This project was my first project using React.js. I learned a lot of how to take advantage of the React documentation and really grew to love the workflow of React. It made making everything modularized a breeze.",
    "contributions": [
      "Created the frontend layout",
      "Implemented form submits and states using React"
    ],
    "technologies": [
      "React.js",
      "react-bootstrap",
      "randomuser.me API"
    ],
    "images": [
      "https://raw.githubusercontent.com/edwardreyes29/Employee_Directory/master/assets/main.png",
      "https://raw.githubusercontent.com/edwardreyes29/Employee_Directory/master/assets/search-dob.png",
      "https://raw.githubusercontent.com/edwardreyes29/Employee_Directory/master/assets/search-name.png",
      "https://raw.githubusercontent.com/edwardreyes29/Employee_Directory/master/assets/search-phone.png"
    ],
    "links": {
      "deployed": "https://determined-kowalevski-974a9d.netlify.app/",
      "github": "https://github.com/edwardreyes29/Employee_Directory"
    }
  },
  {
    "name": "Afterly",
    "description": "User-friendly marketplace for end of life services",
    "long_description": "This app was a project created to create a all-in-one market place for end of life care. It provides an easy-to-use web platform to organize end of life services. It allows users to save information of available Hospice cares, Lawyers, Life-insurance, and Funeral Homes. Users can create their own cases for several family members.",
    "contributions": [
      "Configured the passport login to work with our app",
      "Set up the table templates",
      "Created User table, Case table, and EstateLaw table",
      "Created yelp functions that incorporate yelp-fusion api calls",
      "Set up yelp-api-routes, html-routes, and api-table-routes",
      "Used ajax to make request to routes in order to get data, store data to tables",
      "Created the logic to send parameters to each page in order to save forms to the current case selected"
    ],
    "technologies": [
      "HTML",
      "CSS",
      "JavaScript",
      "Bootstrap",
      "Semantic UI",
      "MySQL",
      "Sequelize",
      "jQuery",
      "Express.js",
      "Passport.js",
      "Bycrypt.js",
      "yelp-fusion.js",
      "yelp API"
    ],
    "images": [
      "https://raw.githubusercontent.com/edwardreyes29/Afterly/master/assets/login.png",
      "https://raw.githubusercontent.com/edwardreyes29/Afterly/master/assets/main.png",
      "https://raw.githubusercontent.com/edwardreyes29/Afterly/master/assets/form.png",
      "https://raw.githubusercontent.com/edwardreyes29/Afterly/master/assets/after-select.png",
      "https://raw.githubusercontent.com/edwardreyes29/Afterly/master/assets/generate-doc.png"
    ],
    "links": {
      "deployed": "https://sheltered-escarpment-16015.herokuapp.com/",
      "github": "https://github.com/edwardreyes29/Afterly"
    }
  },
  {
    "name": "Weather App",
    "description": "This app allows you to search a location and view weather data.",
    "long_description": "This app allows you to search a location and view weather data such has temperature, cloud conditions, humidity, wind speeds, wind directions, and UV index. The app will also store you previous searched locations, allowing you to search adn see weather data on that location when clicked again. The app also display weather information from a 5 day forecast, displaying similar results as the current weather data.",
    "contributions": [
      "Used HTML, CSS, and Booststrap",
      "Used Bootstrap primarily for row/col alignment, centering, spacing, and text color.",
      "Used css to tweak spacing, background color, spacing between main-content and footer, and more.",
      "I used the Open Weather Api as required by this assignment. I used the Current Weather API, 5-day forecast API, and the current UV Index API in order to get the required data.",
      "I used both vanilla javascript, ES6 syntax, jQuery, and Ajax calls to both work with the API and display HTML elements, information, button interactions dynamically."
    ],
    "technologies": [
      "HTML",
      "CSS",
      "JavaScript",
      "Bootstrap",
      "OpenWeather API",
      "jQuery"
    ],
    "images": [
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/modal-images/WeatherApp-home.png",
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/WeatherApp/tomorrow-weather.png",
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/WeatherApp/5-day-forecast.png",
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/WeatherApp/saved-searches.png",
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/WeatherApp/mobile-responsive.png"
    ],
    "links": {
      "deployed": "https://edwardreyes29.github.io/WeatherApp/",
      "github": "https://github.com/edwardreyes29/WeatherApp"
    }
  },
  {
    "name": "CSUN Career Center: Self-Exploration Page",
    "description": "Interactive Info-graphic for the CSUN Career Center Website",
    "long_description": "An interactive infographic for CSUN's Career Center's website. I was tasked with creating an interactive page to add more content for the Virtual Services section. The page display information in a meaningful way while increasing engagement with student's exploring the content. There are hover animations, clickable events, static animations, an wonderful designs from our previous illustrator whose assets I used and referenced to create this page. This is one of my very first projects using web development technologies. It was a great learning experience working on it and being part of the Career Center's team.",
    "contributions": [
      "Used existing assets to implement to the page and add events and animations to them",
      "Created other svg assets to complete the infographic",
      "Created several prototypes using Adobe XD",
      "Use CSS & JavaScript to add animations and animation events"
    ],
    "technologies": [
      "HTML",
      "CSS",
      "JavaScript",
      "Adobe XD",
      "Adobe Illustrator"
    ],
    "images": [
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/csun-self-exploration/main-page.png",
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/csun-self-exploration/interactive-svgs.png",
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/csun-self-exploration/end-infographic.png",
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/csun-self-exploration/hover-info.png",
      "https://raw.githubusercontent.com/edwardreyes29/self_exploration_page/master/assets/screenshots/responsive-1.png",
      "https://raw.githubusercontent.com/edwardreyes29/self_exploration_page/master/assets/screenshots/responsive-2.png"
    ],
    "links": {
      "deployed": "https://www.csun.edu/career/self-exploration",
      "github": "https://github.com/edwardreyes29/self_exploration_page"
    }
  },
  {
    "name": "Eat-Dat-Burger App",
    "description": "A restaurant app that lets users input the names of burgers they'd like to eat.",
    "long_description": "Eat-Da-Burger! is a restaurant app that lets users input the names of burgers they'd like to eat. This project follows the MVC design pattern. It uses Node and MySQL to query and route data the app and Handlebars to generate your HTML.",
    "contributions": [
      "Used Express to set up the server",
      "Used MySQL workbench to create the schema for burgers table",
      "Used gifs from Giphy to decorate the site with hamburger related images",
      "Implemented a MySQL database to store new burgers entered by the user",
      "Created routes in order to make request to the data base to create or update rows",
      "Used orm to create controllers to the data base where I specified the necessary SQL queries"
    ],
    "technologies": [
      "HTML",
      "CSS",
      "JavaScript",
      "Bootstrap",
      "Express.js",
      "Express handlebars",
      "MySQL",
      "MySQL Workbench",
      "Heroku and JawsDB for deployment"
    ],
    "images": [
      "https://raw.githubusercontent.com/edwardreyes29/Eat-Da-Burger/master/assets/main.png",
      "https://raw.githubusercontent.com/edwardreyes29/Eat-Da-Burger/master/assets/devour.png",
      "https://raw.githubusercontent.com/edwardreyes29/Eat-Da-Burger/master/assets/full.png"
    ],
    "links": {
      "deployed": "https://sheltered-earth-16745.herokuapp.com/",
      "github": "https://github.com/edwardreyes29/Eat-Da-Burger"
    }
  },
  {
    "name": "Calendar App",
    "description": "Allows the user to save events for each hour of the day",
    "long_description": "Allows the user to save events for each hour of the day. Time-blocks are color coded to indicate whether it is in the past (grey), present (red), or future(green). Users can also enter events and save them in the browsers local storage so users can view their events later.",
    "contributions": [
      "Used Bootstrap to style the page.",
      "Added buttons and onClick events to save events to the local storage.",
      "Used jQuery to target DOM elements",
      "Used Moment.js to get the time",
      "Used setTimeout to check the current hour in order to dynamically changed the color of lists."
    ],
    "technologies": [
      "HTML",
      "CSS",
      "JavaScript",
      "jQuery",
      "Momemnt.js"
    ],
    "images": [
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/CalendarApp/main-page.png",
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/CalendarApp/color-coded-time.png",
      "https://raw.githubusercontent.com/edwardreyes29/portfolio/master/assets/images/CalendarApp/responsive.png"
    ],
    "links": {
      "deployed": "https://edwardreyes29.github.io/CalendarApp//",
      "github": "https://github.com/edwardreyes29/CalendarApp"
    }
  },
  {
    "name": "Note Taker App",
    "description": "This app uses express.js to get and post notes to a json file, allowing users to add, save, and delete notes.",
    "long_description": "Learned to work with express to create routes get and post data and send appropriate responses depending on the situation.",
    "contributions": [
      "Created api routes to get, post, delete, and update new notes to a json file",
      "Created html routes to send responses to the requested pages",
      "Used a json file to store the notes created by the user"
    ],
    "technologies": [
      "HTML",
      "CSS",
      "Bootstrap",
      "JavaScript",
      "Node.js",
      "Express.js",
      "jQuery"
    ],
    "images": [
        "https://raw.githubusercontent.com/edwardreyes29/note_taker/master/assets/main.png",
        "https://raw.githubusercontent.com/edwardreyes29/note_taker/master/assets/note1.png",
        "https://raw.githubusercontent.com/edwardreyes29/note_taker/master/assets/note2.png"
    ],
    "links": { "deployed": "https://afternoon-reef-26658.herokuapp.com/", "github": "https://github.com/edwardreyes29/note_taker" }
  },
  {
    "name": "Employee Tracker App",
    "description": "This app is an Content Management Systems built with Node.js.",
    "long_description": "The application takes place in the terminal. It uses inquirer.js to prompt users for questions. It implements MySQL to store tables for employees, roles, and departments and the CLI allows users to interact with the database by allowing them to do things like add new employees, create new departments, and more. Some of the tables have a one-to-many relationships and some rows will be updated depending on the row affected and it's relation to another table.",
    "contributions": [
      "Created queries to add, view, update, and delete rows from each tables",
      "Created the prompts and the interface using inquirer.js",
      "Heavily used promises and async calls using JavaScript in order to display certain rows in the CLI dynamically"
    ],
    "technologies": [
      "JavaScript",
      "Node.js",
      "inquirer.js",
      "console.table",
      "MySQL",
      "MySQL workbench"
    ],
    "images": [
      "https://raw.githubusercontent.com/edwardreyes29/EmployeeTracker/master/assets/main.png",
      "https://raw.githubusercontent.com/edwardreyes29/EmployeeTracker/master/assets/budget.png"
    ],
    "links": { "youtube": "https://www.youtube.com/watch?v=C0KIq9OwxxA&feature=youtu.be", "github": "https://github.com/edwardreyes29/EmployeeTracker" }
  },
  {
    "name": "Team Generator App",
    "description": "Allows the user to save events for each hour of the day. ",
    "long_description": "Takes in information about employees and generates an HTML webpage that displays summaries for each person. Since testing is a key piece in making code maintainable, you will also be ensuring that all unit tests pass.",
    "contributions": [
      "Used Object-Oriented programming using JavaScript to create Employee classes and other classes that extends from it."
    ],
    "technologies": [
      "HTML",
      "CSS",
      "JavaScript",
      "Bootstrap"
    ],
    "images": [
      "https://raw.githubusercontent.com/edwardreyes29/TeamGenerator/master/Assets/main.png",
      "https://raw.githubusercontent.com/edwardreyes29/TeamGenerator/master/Assets/console.png"
    ],
    "links": { "youtube": "https://www.youtube.com/watch?v=2M0senCK0aU&feature=youtu.be", "github": "https://github.com/edwardreyes29/TeamGenerator" }
  }
]